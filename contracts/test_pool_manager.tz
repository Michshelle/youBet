{ parameter
    (or (or (or (mutez %adminWithdrawal) (bool %bet))
            (or (string %getResult) (nat %handleCallback)))
        (or (string %setTargetdate) (unit %withdrawal))) ;
  storage
    (pair (pair (pair (pair (map %accounts address nat) (nat %currentResult))
                      (pair (string %lastCancelled) (string %lastDistributed)))
                (pair (pair (nat %nBalance) (address %oracleAddress))
                      (pair (map %register address bool) (map %stake address nat))))
          (pair (string %targetDate) (nat %yBalance))) ;
  code { LAMBDA
           (map address nat)
           nat
           { PUSH nat 0 ;
             SWAP ;
             ITER { SWAP ; PAIR ; DUP ; CDR ; CDR ; SWAP ; CAR ; ADD } } ;
         DUP ;
         LAMBDA
           (pair (lambda (map address nat) nat)
                 (pair (pair (pair (pair (map address nat) nat) (pair string string))
                             (pair (pair nat address) (pair (map address bool) (map address nat))))
                       (pair string nat)))
           unit
           { UNPAIR ;
             SWAP ;
             PUSH mutez 1 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             CDR ;
             CDR ;
             DIG 3 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             ADD ;
             ADD ;
             MUL ;
             BALANCE ;
             COMPARE ;
             LT ;
             IF { PUSH string
                       "Cannot make any operation as the balance of the contract is smaller than the pool" ;
                  FAILWITH }
                {} ;
             PUSH unit Unit } ;
         SWAP ;
         APPLY ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SOURCE ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Only can be executed by the contract originator" ; FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PUSH mutez 1 ;
                     PUSH nat 10000000 ;
                     DIG 3 ;
                     DUP 6 ;
                     CDR ;
                     CDR ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     ADD ;
                     ADD ;
                     ADD ;
                     MUL ;
                     ADD ;
                     BALANCE ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string
                               "Admin cannot make any operation as the balance of the contract is smaller than the pool" ;
                          FAILWITH }
                        {} ;
                     SENDER ;
                     CONTRACT unit ;
                     IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                     SWAP ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH mutez 1000000 ;
                     AMOUNT ;
                     COMPARE ;
                     LT ;
                     IF { PUSH string "the amount must be larger than 1 tezos" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     GET ;
                     IF_NONE {} { DROP ; PUSH string "It is on the current list." ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DUP 5 ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PUSH bool True ;
                     DUP 3 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH mutez 1 ;
                          AMOUNT ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          ADD ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR }
                        {} ;
                     PUSH bool False ;
                     DIG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          PUSH mutez 1 ;
                          AMOUNT ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DUP 5 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          ADD ;
                          PAIR ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR }
                        {} ;
                     NIL operation ;
                     PAIR } }
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 IF_LEFT
                   { SOURCE ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Only can be executed by the contract originator" ; FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Not the target date to run" ; FAILWITH } {} ;
                     PUSH nat 100 ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     PUSH nat 100 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     DUP 5 ;
                     CDR ;
                     CDR ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     OR ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 3 ;
                          PAIR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          PUSH nat 0 ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 CAR ;
                                 DIG 2 ;
                                 CDR ;
                                 CDR ;
                                 DUP 3 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 DUP 3 ;
                                 GET ;
                                 IF_NONE
                                   { DUP 3 ;
                                     CDR ;
                                     DUP 4 ;
                                     CAR ;
                                     CDR ;
                                     DUP 5 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     DUP 6 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     DIG 6 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 5 ;
                                     DIG 6 ;
                                     SWAP ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR }
                                   { DUP 4 ;
                                     CDR ;
                                     DUP 5 ;
                                     CAR ;
                                     CDR ;
                                     DUP 6 ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     DUP 7 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CDR ;
                                     DIG 7 ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     CAR ;
                                     DIG 6 ;
                                     DIG 6 ;
                                     ADD ;
                                     DIG 6 ;
                                     SWAP ;
                                     SOME ;
                                     SWAP ;
                                     UPDATE ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR ;
                                     PAIR } } ;
                          NIL operation ;
                          PAIR }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          DUP 4 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CONTRACT %getData (contract nat) ;
                          IF_NONE { PUSH string "Oracle not found" ; FAILWITH } {} ;
                          SELF_ADDRESS ;
                          CONTRACT %handleCallback nat ;
                          IF_NONE { PUSH string "Callback func not found" ; FAILWITH } {} ;
                          NIL operation ;
                          DIG 2 ;
                          PUSH mutez 0 ;
                          DIG 3 ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          PAIR } }
                   { PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH string "something wrong with fetched result!" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "Only can be executed by the manager itself" ; FAILWITH }
                        {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     COMPARE ;
                     EQ ;
                     IF { DUP ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 CAR ;
                                 PUSH bool False ;
                                 DIG 3 ;
                                 CDR ;
                                 CDR ;
                                 COMPARE ;
                                 EQ ;
                                 IF { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      GET ;
                                      IF_NONE
                                        { DROP ;
                                          PUSH string "register pool and stake pool are not consistent!" ;
                                          FAILWITH }
                                        { DUP 3 ;
                                          CDR ;
                                          DUP 4 ;
                                          CAR ;
                                          CDR ;
                                          CDR ;
                                          CDR ;
                                          DUP 3 ;
                                          DUP 6 ;
                                          CAR ;
                                          CDR ;
                                          CAR ;
                                          CAR ;
                                          DUP 7 ;
                                          CDR ;
                                          CDR ;
                                          DIG 5 ;
                                          MUL ;
                                          EDIV ;
                                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                          CAR ;
                                          ADD ;
                                          DIG 3 ;
                                          SWAP ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          DUP 3 ;
                                          CAR ;
                                          CDR ;
                                          CDR ;
                                          CAR ;
                                          PAIR ;
                                          DUP 3 ;
                                          CAR ;
                                          CDR ;
                                          CAR ;
                                          PAIR ;
                                          DIG 2 ;
                                          CAR ;
                                          CAR ;
                                          PAIR ;
                                          PAIR } }
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      PUSH nat 0 ;
                                      DIG 3 ;
                                      SWAP ;
                                      SOME ;
                                      SWAP ;
                                      UPDATE ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIG 2 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR } } }
                        {} ;
                     PUSH nat 2 ;
                     DIG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DUP ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          ITER { SWAP ;
                                 PAIR ;
                                 DUP ;
                                 CAR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CDR ;
                                 CAR ;
                                 PUSH bool True ;
                                 DIG 3 ;
                                 CDR ;
                                 CDR ;
                                 COMPARE ;
                                 EQ ;
                                 IF { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      GET ;
                                      IF_NONE
                                        { DROP ;
                                          PUSH string "register pool and stake pool are not consistent!" ;
                                          FAILWITH }
                                        { DUP 3 ;
                                          CDR ;
                                          DUP 4 ;
                                          CAR ;
                                          CDR ;
                                          CDR ;
                                          CDR ;
                                          DUP 3 ;
                                          DUP 6 ;
                                          CDR ;
                                          CDR ;
                                          DUP 7 ;
                                          CAR ;
                                          CDR ;
                                          CAR ;
                                          CAR ;
                                          DIG 5 ;
                                          MUL ;
                                          EDIV ;
                                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                          CAR ;
                                          ADD ;
                                          DIG 3 ;
                                          SWAP ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          DUP 3 ;
                                          CAR ;
                                          CDR ;
                                          CDR ;
                                          CAR ;
                                          PAIR ;
                                          DUP 3 ;
                                          CAR ;
                                          CDR ;
                                          CAR ;
                                          PAIR ;
                                          DIG 2 ;
                                          CAR ;
                                          CAR ;
                                          PAIR ;
                                          PAIR } }
                                    { SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CDR ;
                                      PUSH nat 0 ;
                                      DIG 3 ;
                                      SWAP ;
                                      SOME ;
                                      SWAP ;
                                      UPDATE ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      PAIR ;
                                      DIG 2 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR } } }
                        {} ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CAR ;
                            DIG 2 ;
                            CDR ;
                            CDR ;
                            DUP 3 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            CAR ;
                            DUP 3 ;
                            GET ;
                            IF_NONE
                              { DUP 3 ;
                                CDR ;
                                DUP 4 ;
                                CAR ;
                                CDR ;
                                DUP 5 ;
                                CAR ;
                                CAR ;
                                CDR ;
                                DUP 6 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                DIG 6 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CAR ;
                                DIG 5 ;
                                DIG 6 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                PAIR }
                              { DUP 4 ;
                                CDR ;
                                DUP 5 ;
                                CAR ;
                                CDR ;
                                DUP 6 ;
                                CAR ;
                                CAR ;
                                CDR ;
                                DUP 7 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                DIG 7 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CAR ;
                                DIG 5 ;
                                DIG 6 ;
                                ADD ;
                                DIG 6 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                PAIR } } ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     PUSH nat 0 ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     EMPTY_MAP address nat ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     EMPTY_MAP address bool ;
                     PAIR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DROP ;
                 SOURCE ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Only can be executed by the contract originator" ; FAILWITH }
                    {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DROP ;
                 DUP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE
                   {}
                   { DROP ;
                     PUSH string "May withdrawal after the coming round of gambling!" ;
                     FAILWITH } ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE
                   { PUSH string "Your address is not in the log" ; FAILWITH }
                   { SENDER ;
                     CONTRACT unit ;
                     IF_NONE { PUSH string "Contract not found." ; FAILWITH } {} ;
                     SWAP ;
                     PUSH mutez 1 ;
                     MUL ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     NONE nat ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } } } }
