{ parameter
    (or (contract %getData nat) (pair %update (pair nat string) (pair nat string))) ;
  storage
    (pair (pair (pair (address %addr) (string %currentd))
                (pair (nat %currentq) (string %previousd)))
          (pair (nat %previousq) (nat %result))) ;
  code { UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             NIL operation ;
             DIG 2 ;
             PUSH mutez 0 ;
             DIG 4 ;
             CDR ;
             CDR ;
             TRANSFER_TOKENS ;
             CONS ;
             PAIR }
           { DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             DUP 3 ;
             CDR ;
             CAR ;
             PAIR ;
             DUP 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             CAR ;
             CAR ;
             DIG 2 ;
             UNPAIR ;
             DUP 5 ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Not allowed" ; FAILWITH } {} ;
             DUP 5 ;
             CDR ;
             DUP 6 ;
             CAR ;
             CDR ;
             CDR ;
             DUP 5 ;
             PAIR ;
             DIG 6 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 6 ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             DUP 3 ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             DUP ;
             CDR ;
             DIG 3 ;
             DUP 3 ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             SWAP ;
             DIG 2 ;
             COMPARE ;
             GT ;
             IF { PUSH nat 2 ; SWAP ; DUP ; DUG 2 ; CDR ; CAR ; PAIR ; SWAP ; CAR ; PAIR }
                { PUSH nat 1 ; SWAP ; DUP ; DUG 2 ; CDR ; CAR ; PAIR ; SWAP ; CAR ; PAIR } ;
             NIL operation ;
             PAIR } } }

